<?php
   ini_set('display_errors', true);
  /*
// CREATE TABLE "ERRO_SQL" 
        ("key" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL ,
		 "data" DATETIME,
 		 "erro" INTEGER, 
		 "msg" VARCHAR,
		 "sql" VARCHAR);
    /**  
    * @classe    banco_dados  
    * @descr     Classe de acesso ao banco de dados via PDO  
    * @autor     Joao Goulart 
    * @email     goulart.joao@gmail.com
    * @data      Agosto/2014 
    * @copyright (c) 2014 by Joao Goulart
    */ 
 class banco_dados {
        //parâmetros de conexão 
        var $cfg;
        var $db; 
        var $dbhost; 
        var $dbuser; 
        var $dbpasswd;
         
        //handle da conexão 
        var $conn; 

        //variaveos ODBC 
        var $dsn; 
        var $driver;
        var $uid;
        var $pwd; 
        //resultado das Queries 
        var $sql; 
        var $arr; 
        var $banco;
		    var $cliente;
		    var $tipo;
		    var $options;
		    var $erro;
   // construtor da classe     
   function __construct($banco, $tela='') {
 	    $bb = explode('_', $banco);
      $this->tipo    = $bb[0];
      $this->cliente = $bb[1];
      if (count($bb) > 2) { $this->cliente = $bb[1].'_'.$bb[2]; }
      $this->cfg = $this->busca_param($this->tipo, $this->cliente);
      if(!is_array($this->cfg)) {  $this->erro_fatal('Erro nos Parâmetros de Conexão, verifique!' , $this->cliente.'-'.$this->tipo);  return $this->erro_sql;  }
      $this->dsn        = trim($this->cfg['dsn']);
      $this->dbhost     = trim($this->cfg['host']);
      $this->dbpasswd   = trim($this->cfg['pwd']);
      $this->dbuser     = trim($this->cfg['user']);
      $this->db         = trim($this->cfg['dbname']);
      $this->driver     = trim($this->cfg['driver']);
  	  $this->options = array(PDO::NULL_NATURAL => true, PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, PDO::ATTR_PERSISTENT => true);
      try {
		switch ($this->tipo)   {	
		  case 	'ORACLE':
             $dns = "oci:dbname=$this->dbhost";
             $this->conn = new PDO("oci:dbname=$this->db",$this->dbuser,$this->dbpasswd , $this->options);
             break;
          case  'ODBC':  
          case  'SQLSERVER':
 //            $dns = "odbc:Driver=".$this->driver.";Dsn=".$this->dsn.";uid=".$this->dbuser.";PWD=".$this->dbpasswd; 
             $dns = "odbc:Dsn=".$this->dsn.";uid=".$this->dbuser.";PWD=".$this->dbpasswd; 
             $this->conn = new PDO($dns); 
             break;
          case  'SYBASE':  
               $this->conn = new PDO("sqlanywhere:Dsn=Foscarini; uid=dba; pwd=sql ");
             break;
   		  case  'POSTGRESQL': 
             $this->conn = new PDO("pgsql:host=$this->dbhost;port=5432;dbname=$this->db;user=$this->dbuser;password=$this->dbpasswd");
             break;
          case   'MYSQL':
             $this->options =  array(PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8");
             $this->conn = new PDO("mysql:host=$this->dbhost;dbname=$this->db", $this->dbuser, $this->dbpasswd , $this->options);
             break;
          case  'FIREBIRD':  
      	     $dns = "firebird:dbname=$this->db"; 
    		 $this->conn = new PDO("firebird:dbname=$this->db; charset=ISO8859_1;", $this->dbuser, $this->dbpasswd ) ; 
             // charset=ISO8859_1  
       		 break;
       	  case 	'SQLITE': 
             $this->conn = new PDO("sqlite:".$this->db );
             break;
	    }	    
       }   catch(Exception $e) {  $er = $e->getMessage();   $this->erro = $er; return $this->erro_sql($er, $banco, $tela);   }
       
   }   
  

   public function busca_param($tp, $cli)  {
     $cc = __DIR__.'/parametro.sqlite';  
     $lite =  new PDO('sqlite:'.$cc);
     $sq   = " select dsn, host, dbname, user, pwd, driver from empresa_banco where id = '$cli' and dbms = '$tp' ";      
     $sqx = $lite->query($sq);
     $res = $sqx->fetch(PDO::FETCH_ASSOC);
     return $res;   	
  }


  function banco_query($query, $mode='sql',  $tela='') {
     if(is_object($this->conn)) {
    	 $this->conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
       $this->conn->setAttribute(PDO::ATTR_ORACLE_NULLS, PDO::NULL_NATURAL);
         try  { 
          $this->sql = $this->conn->query($query);
//          $this->sql->execute();
          }   catch(PDOException $e) {  
                  $msg = $e->getMessage();
                  return $this->erro_sql($msg,  $query, $tela);
              }
         switch ($mode)   { 
          case "sql"     :  /* $this->conn->commit(); */  return 1; 
          case "array"   :  $arr  = $this->sql->fetchAll(PDO::FETCH_ASSOC);  break;  
//          case "array"   :  $arr  = $sql->fetchAll();  break;  
          case "single"  :  $arr  = $this->sql->fetch(PDO::FETCH_ASSOC); break; 
          case "nrows"   :  $arr  = $this->sql->rowCount(); break;  
          case "unico"   :  $arr  = $this->sql->fetchColumn();  break;
        }     
        $this->arr = $arr; 
        return $this->arr;
    }
 }


function banco_query_blob($query, $column1, $blob_data1, $column2='' ,$blob_data2='',$tela='') {
     if(is_object($this->conn)) {
       $this->conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
       $this->conn->setAttribute(PDO::ATTR_ORACLE_NULLS, PDO::NULL_NATURAL);
        try{
            $this->sql = $this->conn->prepare($query);
            $this->sql->bindValue($column1, $blob_data1, PDO::PARAM_LOB);
            if( $column2)    { $this->sql->bindValue($column2, $blob_data2, PDO::PARAM_LOB);  }
            $this->sql->execute(); 
        	}     catch(PDOException $e)    {  $msg = $e->getMessage();  return $this->erro_sql($msg, $query, $tela);   }
      return 1;
    }
 }

 public function erro_sql($msg,  $query,  $tela='')   {
      $erro_msg = urlencode($msg);
      $erro_txt = urlencode($query);

    if (is_object($tela))  {
          $tela->script(' var myWin  = window.open("/diuno/inc/erro.php?tipo=Erro de SQL.&msg='.$erro_msg.'&sql='.$erro_txt.'", "Erro.", "status = 1, height = 400, width = 500, resizable = 0, scrollbars=1" );
                 myWin.focus(); ');
      }  else {
      echo( '<script>
               var myWin  = window.open("/diuno/inc/erro.php?tipo=Erro de SQL.&msg='.$erro_msg.'&sql='.$erro_txt.'", "Erro.", "status = 1, height = 400, width = 500, resizable = 0, scrollbars=1" );
                 myWin.focus();
                </script>');
      } 
     return false;
     exit;
 }

 
 
 public function erro_fatal($er,$banco)  {
     $erro =  ' Erro conectando DB! '.$er.  '  Conexão: '.$banco.'  ...Verifique Parametros de Conexão';
  	 $this->erro = $erro;
     return $this->erro;
  }
}    
